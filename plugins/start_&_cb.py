import asyncio
from pyrogram import Client, filters
from pyrogram.errors import FloodWait
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message, CallbackQuery
from helper.database import db
from config import Config, Txt
import humanize
from time import sleep


@Client.on_message(filters.private & filters.command("start"))
async def start(client, message):

    if message.from_user.id in Config.BANNED_USERS:
        await message.reply_text("D√©sol√©, vous √™tes banni.")
        return

    user = message.from_user
    await db.add_user(client, message)
    
    # Liste des stickers et messages interm√©diaires
    sequence = [
        {"type": "message", "text": "‚ú® S·¥Ä ü·¥ú·¥õ. J·¥á s·¥ú…™s L·¥ú“ì“ì è. L·¥á ·¥Ñ ú·¥á“ì ·¥Ö·¥á  ü'√©«´·¥ú…™·¥ò·¥Ä…¢·¥á ·¥Ä·¥ú ·¥Ñ ú·¥Ä·¥ò·¥á·¥Ä·¥ú ·¥Ö·¥á ·¥ò·¥Ä…™ ü ü·¥áüòÅ...."},
        {"type": "sticker", "id": "CAACAgQAAxkBAAI5Qmhr8zPYWMTtfvRgZoZh7rJhivIMAAKLDgACWE4wUg3rP9wbFJPmHgQ"},  # ID du 1er sticker
        {"type": "message", "text": " M·¥è…¥  Ä√™·¥†·¥á √† ·¥ç·¥è…™, ·¥Ñ'·¥ás·¥õ ·¥Ö·¥á ·¥õ Ä·¥è·¥ú·¥†·¥á Ä  ü·¥á O…¥·¥á P…™·¥á·¥Ñ·¥á «´·¥ú·¥á ü «´·¥ú'·¥á…¥ s·¥è…™·¥õ  ü·¥á P Ä…™xüí• ..."},
        {"type": "sticker", "id": "CAACAgQAAxkBAAI5UGhr8-Slyzo23zWEZ1tnjFkpDevvAAKxEQACaFsZUgyBRaS2kd6WHgQ"},  # ID du 2√®me sticker
        {"type": "message", "text": " E·¥õ ·¥ä·¥á ·¥Ö·¥á·¥†…™·¥á…¥·¥Ö Ä·¥Ä…™  ü·¥á R·¥è…™ ·¥Ö·¥ás P…™ Ä·¥Ä·¥õ·¥ás ..."},
        {"type": "sticker", "id": "CAACAgQAAxkBAAI5VGhr9FeRoiJLXb2fojC1I4dVAkGXAAIpEAAC95ooUlcZZo3Owm9CHgQ"}   # ID du 3√®me sticker
    ]
    
    # Envoyer et supprimer les √©l√©ments un par un
    for item in sequence:
        if item["type"] == "message":
            sent_item = await message.reply_text(item["text"])
        else:
            sent_item = await message.reply_sticker(item["id"])
        
        await asyncio.sleep(2)  # Attendre 2 secondes
        await sent_item.delete()
        await asyncio.sleep(0.3)  # Petit d√©lai entre les √©l√©ments
    
    # Ces messages en commentaire, est l√† pour vous aider √† bien comprendre üòúüòÅ. C'est kingcey. j'ai modifi√© le Renamer bot de codeflix pour donner ceci
    button = InlineKeyboardMarkup([[
        InlineKeyboardButton('M…™s·¥ás √† J·¥è·¥ú Ä', url='https://t.me/BotZFlix'),
        InlineKeyboardButton('A…™·¥Ö·¥á', url='https://t.me/BTZF_CHAT')
    ], [
        InlineKeyboardButton('√Ä P Ä·¥è·¥ò·¥ès', callback_data='about'),
        InlineKeyboardButton('A…™·¥Ö·¥á', callback_data='help')
    ]])
    
    if Config.START_PIC:
        await message.reply_photo(Config.START_PIC, caption=Txt.START_TXT.format(user.mention), reply_markup=button)
    else:
        await message.reply_text(text=Txt.START_TXT.format(user.mention), reply_markup=button, disable_web_page_preview=True)


@Client.on_message(filters.private & (filters.document | filters.audio | filters.video))
async def rename_start(client, message):
    file = getattr(message, message.media.value)
    filename = file.file_name
    filesize = humanize.naturalsize(file.file_size)

    if not Config.STRING_SESSION:
        if file.file_size > 4000 * 1024 * 1024:
            return await message.reply_text("D√©sol√©, ce bot ne prend pas en charge les fichiers de plus de 4Go")

    try:
        text = f"""**__Q·¥ú·¥á ·¥†·¥è·¥ú ü·¥á·¥¢-·¥†·¥è·¥ús «´·¥ú·¥á ·¥ä·¥á “ì·¥Äss·¥á ·¥Ä·¥†·¥á·¥Ñ ·¥Ñ·¥á “ì…™·¥Ñ ú…™·¥á Ä ?__**\n\n**N·¥è·¥ç ·¥Ö·¥ú “ì…™·¥Ñ ú…™·¥á Ä** :- `{filename}`\n\n**T·¥Ä…™ ü ü·¥á ·¥Ö·¥ú “ì…™·¥Ñ ú…™·¥á Ä** :- `{filesize}`"""
        buttons = [[InlineKeyboardButton("üìù C·¥è·¥ç·¥ç·¥á…¥·¥Ñ·¥á Ä  ü·¥á  Ä·¥á…¥·¥è·¥ç·¥ç·¥Ä…¢·¥á üìù", callback_data="rename")],
                   [InlineKeyboardButton("‚úñÔ∏è A…¥…¥·¥ú ü·¥á Ä ‚úñÔ∏è", callback_data="close")]]
        await message.reply_text(text=text, reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup(buttons))
    except FloodWait as e:
        await sleep(e.value)
        text = f"""**__Q·¥ú·¥á ·¥†·¥è·¥ú ü·¥á·¥¢-·¥†·¥è·¥ús «´·¥ú·¥á ·¥ä·¥á “ì·¥Äss·¥á ·¥Ä·¥†·¥á·¥Ñ ·¥Ñ·¥á “ì…™·¥Ñ ú…™·¥á Ä ?__**\n\n**N·¥è·¥ç ·¥Ö·¥ú “ì…™·¥Ñ ú…™·¥á Ä** :- `{filename}`\n\n**T·¥Ä…™ ü ü·¥á ·¥Ö·¥ú “ì…™·¥Ñ ú…™·¥á Ä** :- `{filesize}`"""
        buttons = [[InlineKeyboardButton("üìù C·¥è·¥ç·¥ç·¥á…¥·¥Ñ·¥á Ä  ü·¥á  Ä·¥á…¥·¥è·¥ç·¥ç·¥Ä…¢·¥á üìù", callback_data="rename")],
                   [InlineKeyboardButton("‚úñÔ∏è A…¥…¥·¥ú ü·¥á Ä ‚úñÔ∏è", callback_data="close")]]
        await message.reply_text(text=text, reply_to_message_id=message.id, reply_markup=InlineKeyboardMarkup(buttons))
    except:
        pass


@Client.on_callback_query()
async def cb_handler(client, query: CallbackQuery):
    data = query.data
    if data == "start":
        await query.message.edit_text(
            text=Txt.START_TXT.format(query.from_user.mention),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ D·¥á·¥†", callback_data='dev')
            ],[
                InlineKeyboardButton(
                    'M…™s·¥ás √† J·¥è·¥ú Ä', url='https://t.me/BotZFlix'),
                InlineKeyboardButton(
                    'S·¥ú·¥ò·¥ò·¥è Ä·¥õ', url='https://t.me/BTZF_CHAT')
            ],[
                InlineKeyboardButton('√Ä P Ä·¥è·¥ò·¥ès', callback_data='about'),
                InlineKeyboardButton('A…™·¥Ö·¥á', callback_data='help')
            ]])
        )
    elif data == "dev":
        await query.message.edit_text(
            text=Txt.DEV_TXT,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("P·¥Ä è·¥á Ä  ü·¥á C·¥è·¥Ö·¥á S·¥è·¥ú Ä·¥Ñ·¥á", url="https://t.me/Kingcey")
                ],[
                InlineKeyboardButton("üéå Anime Terr", url="https://t.me/Anime_Terr")
                ],[
                InlineKeyboardButton("‚úò F·¥á Ä·¥ç·¥á Ä", callback_data="close"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="start")
            ]])          
        )
    elif data == "help":
        await query.message.edit_text(
            text=Txt.HELP_TXT,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("L√©gendes", callback_data="leg")
                ],[
                InlineKeyboardButton("Vignettes", callback_data='thumb')
                ],[
                InlineKeyboardButton("‚úò F·¥á Ä·¥ç·¥á Ä", callback_data="close"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="start")
            ]])
        )
    elif data == "thumb":
        await query.message.edit_text(
            text=Txt.THUMB_TXT,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚úò F·¥á Ä·¥ç·¥á Ä", callback_data="close"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="help")
            ]])
        )
    elif data == "zft":
        await query.message.edit_text(
            text=Txt.ZFLIX_TXT,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("ZF ü…™x-T·¥á·¥Ä·¥ç", url="t.me/ZFlixTeam"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="about")
            ]])
        )
    elif data == "leg":
        await query.message.edit_text(
            text=Txt.LEG_TXT,
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("‚úò F·¥á Ä·¥ç·¥á Ä", callback_data="close"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="help")
            ]])
        )
    elif data == "about":
        await query.message.edit_text(
            text=Txt.ABOUT_TXT.format(client.mention),
            disable_web_page_preview=True,
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("ZF ü…™x-T·¥á·¥Ä·¥ç", callback_data="zft")
                ],[
                InlineKeyboardButton("‚úò F·¥á Ä·¥ç·¥á Ä", callback_data="close"),
                InlineKeyboardButton("‚ü™ R·¥á·¥õ·¥è·¥ú Ä", callback_data="start")
            ]])
        )

    elif data == "close":
        try:
            await query.message.delete()
            await query.message.reply_to_message.delete()
            await query.message.continue_propagation()
        except:
            await query.message.delete()
            await query.message.continue_propagation()
